<Window
    x:Class="LightBulb.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:models="clr-namespace:LightBulb.Models"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:views="clr-namespace:LightBulb.Views"
    x:Name="Window"
    Title="LightBulb"
    Width="280"
    Height="280"
    AllowsTransparency="True"
    Background="Transparent"
    DataContext="{Binding MainViewModel, Source={StaticResource Locator}}"
    Deactivated="MainWindow_OnDeactivated"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="/LightBulb;component/favicon.ico"
    Loaded="MainWindow_OnLoaded"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SnapsToDevicePixels="True"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Topmost="True"
    UseLayoutRounding="True"
    WindowStartupLocation="Manual"
    WindowStyle="None">
    <Border
        BorderBrush="{DynamicResource PrimaryHueLightBrush}"
        BorderThickness="1"
        CornerRadius="12,12,0,0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Tray icon  -->
            <tb:TaskbarIcon
                x:Name="TaskbarIcon"
                Grid.Row="0"
                IconSource="/LightBulb;component/favicon.ico"
                NoLeftClickDelay="True"
                ToolTipText="LightBulb"
                TrayLeftMouseUp="TaskbarIcon_OnTrayLeftMouseUp">
                <tb:TaskbarIcon.TrayToolTip>
                    <Border
                        Background="{DynamicResource MaterialDesignPaper}"
                        BorderBrush="{DynamicResource MaterialDesignDivider}"
                        BorderThickness="1"
                        CornerRadius="3"
                        TextElement.FontSize="13"
                        TextElement.FontWeight="Regular"
                        TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
                        TextOptions.TextFormattingMode="Ideal"
                        TextOptions.TextRenderingMode="Auto">
                        <Grid Margin="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock
                                Grid.Row="0"
                                FontSize="15"
                                FontWeight="Medium"
                                Foreground="{DynamicResource PrimaryTextBrush}"
                                Text="LightBulb" />
                            <TextBlock Grid.Row="1" Text="{Binding StatusText}" />
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding ShowMainWindowCommand}" Header="Configure">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Settings" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding ToggleEnabledCommand}">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                            <Setter Property="Header" Value="Disable" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                            <Setter Property="Header" Value="Enable" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Power" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Disable for...">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="PowerSettings" />
                            </MenuItem.Icon>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="1 day">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>24:0:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="12 hours">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>12:0:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="6 hours">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>6:0:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="3 hours">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>3:0:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="1 hour">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>1:0:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="30 minutes">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>0:30:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="5 minutes">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>0:5:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}" Header="1 minute">
                                <MenuItem.CommandParameter>
                                    <system:TimeSpan>0:1:0</system:TimeSpan>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Command="{Binding AboutCommand}" Header="About">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Web" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding ExitApplicationCommand}" Header="Exit">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ExitToApp" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <!--  Header  -->
            <Border
                x:Name="Header"
                Grid.Row="0"
                Padding="5,10,5,10"
                Background="{DynamicResource PrimaryHueMidBrush}"
                CornerRadius="12,12,0,0"
                MouseDown="Header_OnMouseDown"
                TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  On/Off button and logo  -->
                    <ToggleButton
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource SecondaryTextBrush}"
                        IsChecked="{Binding IsEnabled}"
                        Style="{DynamicResource MaterialDesignActionAccentToggleButton}"
                        ToolTip="Enable or disable the gamma control">
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="LightbulbOutline" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <!--  Application name and version  -->
                    <TextBlock
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center">
                        <Run
                            FontSize="16"
                            FontWeight="Medium"
                            Foreground="{DynamicResource PrimaryInverseTextBrush}"
                            Text="LightBulb" />
                        <Run Text="v" /><Run Text="{Binding Version, Mode=OneWay}" />
                    </TextBlock>

                    <!--  Version updates  -->
                    <Button
                        Grid.Column="2"
                        Command="{Binding DownloadNewVersionCommand}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="New version available for download"
                        Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
                        <materialDesign:PackIcon Kind="AlertCircleOutline" />
                    </Button>

                    <!--  Section navigation buttons  -->
                    <StackPanel
                        Grid.Column="3"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <Button
                            x:Name="NavigateGeneralSettingsButton"
                            BorderThickness="0,0,0,2"
                            Click="NavigateGeneralSettingsButton_OnClick"
                            Style="{DynamicResource MaterialDesignFlatDarkButton}"
                            ToolTip="General">
                            <materialDesign:PackIcon Kind="Tune" />
                        </Button>
                        <Button
                            x:Name="NavigateGeolocationSettingsButton"
                            BorderThickness="0,0,0,2"
                            Click="NavigateGeoSettingsButton_OnClick"
                            Style="{DynamicResource MaterialDesignFlatDarkButton}"
                            ToolTip="Geolocation">
                            <materialDesign:PackIcon Kind="Earth" />
                        </Button>
                        <Button
                            x:Name="NavigateAdvancedSettingsButton"
                            BorderThickness="0,0,0,2"
                            Click="NavigateAdvancedSettingsButton_OnClick"
                            Style="{DynamicResource MaterialDesignFlatDarkButton}"
                            ToolTip="Advanced">
                            <materialDesign:PackIcon Kind="CheckboxMultipleMarkedOutline" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <!--  Content  -->
            <Border Grid.Row="1" Background="{DynamicResource MaterialDesignCardBackground}">
                <materialDesign:Transitioner x:Name="ContentTransitioner" SelectedIndex="0">
                    <materialDesign:Transitioner.Resources>
                        <Style TargetType="{x:Type materialDesign:TransitionerSlide}">
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
                            <Setter Property="BackwardWipe">
                                <Setter.Value>
                                    <materialDesign:SlideWipe Direction="Right" Duration="0:0:0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ForwardWipe">
                                <Setter.Value>
                                    <materialDesign:SlideWipe Direction="Left" Duration="0:0:0.3" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </materialDesign:Transitioner.Resources>

                    <views:GeneralSettingsView />
                    <views:GeoSettingsView />
                    <views:AdvancedSettingsView />
                </materialDesign:Transitioner>
            </Border>

            <!--  Status bar  -->
            <StackPanel
                Grid.Row="2"
                Background="{DynamicResource PrimaryHueMidBrush}"
                Orientation="Vertical"
                TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <!--  Cycle position  -->
                <ProgressBar Background="Transparent" Value="{Binding CyclePosition, Mode=OneWay}" />

                <!--  Cycle state and status text  -->
                <StackPanel
                    Margin="5"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <!--  Cycle state icon  -->
                    <materialDesign:PackIcon Background="Transparent" ToolTip="{Binding CycleState}">
                        <materialDesign:PackIcon.Style>
                            <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="{x:Type materialDesign:PackIcon}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Disabled}">
                                        <Setter Property="Kind" Value="SyncOff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Transition}">
                                        <Setter Property="Kind" Value="Sync" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Day}">
                                        <Setter Property="Kind" Value="WhiteBalanceSunny" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Night}">
                                        <Setter Property="Kind" Value="WeatherNight" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    <!--  Status text  -->
                    <TextBlock
                        Margin="3,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding StatusText}" />
                </StackPanel>
            </StackPanel>
        </Grid>
    </Border>
</Window>