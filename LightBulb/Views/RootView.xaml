<Window
    x:Class="LightBulb.Views.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:LightBulb.Views.Controls"
    xmlns:converters="clr-namespace:LightBulb.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lightBulb="clr-namespace:LightBulb"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:viewModels="clr-namespace:LightBulb.ViewModels"
    Width="450"
    Height="350"
    Closing="RootView_OnClosing"
    d:DataContext="{d:DesignInstance Type=viewModels:RootViewModel}"
    Background="{DynamicResource MaterialDesignPaper}"
    Icon="/LightBulb;component/favicon.ico"
    Loaded="RootView_OnLoaded"
    ResizeMode="NoResize"
    Style="{DynamicResource MaterialDesignRoot}"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Border BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1">
        <materialDesign:DialogHost
            CloseOnClickAway="False"
            Loaded="{s:Action OnViewFullyLoaded}"
            Style="{DynamicResource MaterialDesignEmbeddedDialogHost}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--  Tray icon  -->
                <tb:TaskbarIcon
                    x:Name="TaskbarIcon"
                    Grid.Row="0"
                    IconSource="/LightBulb;component/favicon.ico"
                    NoLeftClickDelay="True"
                    ToolTipText="LightBulb"
                    TrayLeftMouseUp="TaskbarIcon_OnTrayLeftMouseUp">
                    <tb:TaskbarIcon.TrayToolTip>
                        <Border
                            Background="{DynamicResource MaterialDesignBackground}"
                            BorderBrush="{DynamicResource PrimaryHueLightBrush}"
                            BorderThickness="1"
                            Style="{DynamicResource MaterialDesignRoot}">
                            <StackPanel Margin="4" Orientation="Vertical">
                                <!--  Title  -->
                                <TextBlock
                                    FontSize="15"
                                    FontWeight="Medium"
                                    Foreground="{DynamicResource PrimaryTextBrush}"
                                    Text="LightBulb" />

                                <!--  Status  -->
                                <TextBlock Text="{Binding CurrentColorConfiguration}" Visibility="{Binding IsWorking, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                                <TextBlock Text="Disabled" Visibility="{Binding IsWorking, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
                            </StackPanel>
                        </Border>
                    </tb:TaskbarIcon.TrayToolTip>
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                x:Name="ShowWindowMenuItem"
                                Click="ShowWindowMenuItem_OnClick"
                                Header="Open">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="WindowMaximize" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{s:Action Enable}"
                                Header="Enable"
                                Visibility="{Binding IsEnabled, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Power" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{s:Action Disable}"
                                Header="Disable"
                                Visibility="{Binding IsEnabled, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Power" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Disable for...">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="PowerSettings" />
                                </MenuItem.Icon>
                                <MenuItem Command="{s:Action DisableTemporarilyUntilSunrise}" Header="Until sunrise" />
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="1 day">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>24:0:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="12 hours">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>12:0:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="6 hours">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>6:0:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="3 hours">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>3:0:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="1 hour">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>1:0:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="30 minutes">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>0:30:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="5 minutes">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>0:5:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Command="{s:Action DisableTemporarily}" Header="1 minute">
                                    <MenuItem.CommandParameter>
                                        <system:TimeSpan>0:1:0</system:TimeSpan>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Command="{s:Action ShowAbout}" Header="About">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Web" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{s:Action Exit}" Header="Exit">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Close" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>

                <!--  Header  -->
                <Border
                    x:Name="Header"
                    Grid.Row="0"
                    Padding="8,12"
                    Background="{DynamicResource PrimaryHueMidBrush}"
                    MouseDown="Header_OnMouseDown"
                    TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  On/Off button and logo  -->
                        <ToggleButton
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource SecondaryTextBrush}"
                            IsChecked="{Binding IsEnabled}"
                            Style="{DynamicResource MaterialDesignActionAccentToggleButton}"
                            ToolTip="Switch LightBulb on/off">
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon
                                    Width="24"
                                    Height="24"
                                    Kind="LightbulbOutline" />
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>

                        <!--  Application name and version  -->
                        <TextBlock
                            Grid.Column="1"
                            Margin="8,1,0,0"
                            VerticalAlignment="Center"
                            FontSize="16">
                            <Run
                                FontSize="19"
                                FontWeight="Medium"
                                Foreground="{DynamicResource PrimaryInverseTextBrush}"
                                Text="{x:Static lightBulb:App.Name}" />
                            <Run Text="v" /><Run Text="{x:Static lightBulb:App.VersionString}" />
                        </TextBlock>

                        <!--  Close button  -->
                        <Button
                            x:Name="CloseButton"
                            Grid.Column="3"
                            Padding="4"
                            VerticalAlignment="Center"
                            Click="CloseButton_OnClick"
                            Style="{DynamicResource MaterialDesignFlatDarkButton}"
                            ToolTip="Close this window (but keep LightBulb running)">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Close" />
                        </Button>
                    </Grid>
                </Border>

                <!--  Body  -->
                <Grid Grid.Row="1" Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  Sunset time  -->
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="19"
                        TextAlignment="Center">
                        <Run Text="Sunset" />
                        <LineBreak />
                        <Run Foreground="{DynamicResource PrimaryTextBrush}" Text="{Binding ActualSunsetTime, Converter={x:Static converters:TimeSpanToTimeOfDayStringConverter.Instance}, Mode=OneWay}" />
                    </TextBlock>

                    <!--  Sundial  -->
                    <Grid
                        Grid.Column="1"
                        Width="220"
                        Height="220">
                        <!--  Night time arc  -->
                        <controls:Arc
                            EndAngle="{Binding ActualSunriseTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            StartAngle="{Binding ActualSunsetEndTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            Stroke="#FFD280"
                            StrokeThickness="24" />

                        <!--  Day time arc  -->
                        <controls:Arc
                            EndAngle="{Binding ActualSunsetTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            StartAngle="{Binding ActualSunriseEndTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            Stroke="#F2F8FF"
                            StrokeThickness="24" />

                        <!--  Sunrise transition  -->
                        <controls:Arc
                            EndAngle="{Binding ActualSunriseEndTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            StartAngle="{Binding ActualSunriseTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            Stroke="#FFEDCD"
                            StrokeThickness="24" />

                        <!--  Sunset transition  -->
                        <controls:Arc
                            EndAngle="{Binding ActualSunsetEndTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            StartAngle="{Binding ActualSunsetTime.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            Stroke="#FFEDCD"
                            StrokeThickness="24" />

                        <!--  Current time position  -->
                        <controls:ArcPoint
                            Angle="{Binding Instant.TimeOfDay.TotalDays, Converter={x:Static converters:FractionToDegreesConverter.Instance}}"
                            Fill="#C0FF8B50"
                            Size="12"
                            Stroke="#FF8B50" />

                        <!--  Current temperature and brightness  -->
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="48"
                                Height="48"
                                Kind="{Binding CycleState, Converter={x:Static converters:CycleStateToPackIconKindConverter.Instance}, Mode=OneWay}" />
                            <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="20">
                                <Run Text="{Binding CurrentColorConfiguration.Temperature, StringFormat=\{0:F0\} K, Mode=OneWay}" />
                                <LineBreak />
                                <Run Text="{Binding CurrentColorConfiguration.Brightness, StringFormat=\{0:P0\}, Mode=OneWay}" />
                            </TextBlock>
                        </StackPanel>

                        <!--  Current time  -->
                        <StackPanel
                            Margin="0,0,0,40"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="16"
                                Height="16"
                                Kind="ClockOutline" />
                            <TextBlock
                                Margin="4,0,0,0"
                                FontSize="14"
                                Text="{Binding Instant, StringFormat=\{0:t\}}" />
                        </StackPanel>
                    </Grid>

                    <!--  Sunrise time  -->
                    <TextBlock
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="19"
                        TextAlignment="Center">
                        <Run Text="Sunrise" />
                        <LineBreak />
                        <Run Foreground="{DynamicResource PrimaryTextBrush}" Text="{Binding ActualSunriseTime, Converter={x:Static converters:TimeSpanToTimeOfDayStringConverter.Instance}, Mode=OneWay}" />
                    </TextBlock>
                </Grid>

                <!--  Buttons  -->
                <StackPanel
                    Grid.Row="2"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <!--  Start cycle preview  -->
                    <Button
                        Margin="8"
                        Command="{s:Action EnableCyclePreview}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        ToolTip="Preview 24-hour cycle"
                        Visibility="{Binding IsCyclePreviewEnabled, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="PlayCircleOutline" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="PREVIEW" />
                        </StackPanel>
                    </Button>

                    <!--  Stop cycle preview  -->
                    <Button
                        Margin="8"
                        Command="{s:Action DisableCyclePreview}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        ToolTip="Stop preview"
                        Visibility="{Binding IsCyclePreviewEnabled, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="StopCircleOutline" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="STOP" />
                        </StackPanel>
                    </Button>

                    <!--  Settings  -->
                    <Button
                        Margin="8"
                        Command="{s:Action ShowSettings}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        ToolTip="Open settings">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Settings" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="SETTINGS" />
                        </StackPanel>
                    </Button>

                    <!--  About  -->
                    <Button
                        Margin="8"
                        Command="{s:Action ShowAbout}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        ToolTip="Open project page on GitHub">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Web" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="ABOUT" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </materialDesign:DialogHost>
    </Border>
</Window>